name: Create Release
on:
  workflow_dispatch:

jobs:
  check:
    name: Check Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Packages
        run: sudo apt-get install -y curl jq grep
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Get current version
        id: getversion
        run: |
          version=$(mvn -f src/pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo ::set-output name=version::$version
      - name: Check current version against released tags
        run: |
          echo "url = $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases"
          releases=$(curl -s https://api.github.com/repos/enolgor/gateway/releases | jq -r '.[].tag_name')
          release_not_exists=$(echo "$releases" | grep -q "${{ steps.getversion.outputs.version }}"; echo $?;)
          if [ "$release_not_exists" -eq "1" ]; then exit 0; else exit 1; fi
      - name: Deploy artifacts
        run: mvn -f src/pom.xml clean package
      - name: Release distribution
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.getversion.outputs.version }}
          release_name: ${{ steps.getversion.outputs.version }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: src/distribution/physical-gateway/target/physical-gateway-${{ steps.getversion.outputs.version }}-dist.zip
          asset_content_type: application/zip
